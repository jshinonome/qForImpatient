[{"kind":1,"language":"markdown","value":"## Comments","outputs":[]},{"kind":2,"language":"q","value":"/ start line comment\nshow 18\n\n/\n  block of comment, NOT RECOMMENDED\n\\\n\nshow 99 / inline comment, need a space before \"/\"\n\n\\\nend of file comment, NOT RECOMMENDED","outputs":[]},{"kind":1,"language":"markdown","value":"## Declaring Variables\n\n### Name Convention\n\nAs `_` underscore is an operator in q, it is recommended to use **Camel Case**\n\n-   identifier: `variable`, e.g. `pi`\n-   global identifier: `.namespace.variable`, e.g. `.math.pi`","outputs":[]},{"kind":1,"language":"markdown","value":"### Assignment\n\n-   `:` - local or global assign function, traceable by *vscode-q*\n-   `set` - global assign function, not traceable by *vscode-q*\n-   `::` - global assign function (**NOT RECOMMENDED**)","outputs":[]},{"kind":2,"language":"q","value":"/ root namespace, outside function scope\n/ identifier => global variable\npi: 3.1415;\n/ global identifier => global variable\n.math.pi: 3.1415;\n\n{[num] / num, local parameter, limit to function scope\n    / function scope\n    / identifier => local variables, limit to function scope\n    e: 2.7182;\n    / global identifier => global variable\n    .math.e: 2.7182;\n    \n    / [NOT RECOMMENDED] identifier => local variable, limit to function scope\n    beta:: 0.2801;\n\n    {\n        / inner function scope\n        / as local variables has no hoisting behavior, cannot access local variable outside\n        e * pi / [ERROR] e is not accessible\n        num * pi / [ERROR] num is not accessible\n    }\n\n    / identifier as a symbol => global variables, cause side effect\n    `beta set 0.2801;\n    / global identifier as a symbol => global variables\n    `.math.beta set 0.2081;\n };\n","outputs":[]},{"kind":1,"language":"markdown","value":"## Control Statement\n\n- if\n- while\n- exit\n","outputs":[]}]